<?php

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */



function sparkswag_help($path, $arg) {
  switch ($path) {
    case "opportunity/form1":
      return '<p>' . t("This is helpful info about the form.") . '</p>';
      break;
  case "admin/help#sparkswag":
      return '<p>' . t("This is some help text in the admin menu.") . '</p>';
      break;
  }
} 

function sparkswag_menu() {
	$items = array();
  
	//"Registers URL  opportunity/form1, can view in browser"
	$items['opportunity/form1'] = array( 
	    'title' => 'Research Opportunity Form', //page title
	    'description' => 'A form to fill out info',
	    'page callback' => 'drupal_get_form', //drupal_get_form function is executed when webpage is accessed.
	    'page arguments' => array('sparkswag_myform1_form'), //drupal_get_form function gets this form as array
		'access arguments' => array('sparkswag_form_access'),
	);
	$items['opportunity/mynode'] = array( 
		'title' => 'Find Opportunities',
	    'page callback' => 'sparkswag_private_node_listing',
	    'access callback' => TRUE,
	);
	$items['admin/settings/sparkswag'] = array(
	    'title' => 'Sparkswag',
	    'description' => 'This is module settings page',
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('sparkswag_admin'),
	    'access arguments' => array('administer sparkswag content'),
	    'type' => MENU_NORMAL_ITEM,
	);
	$items['opportunity/details'] = array( 
		'title' => 'This Opportunity',
	    'page callback' => 'sparkswag_private_node_this',
	    'access callback' => TRUE,
	);
  return $items;
}

/**
 * Implements hook_permission().
 */
function sparkswag_permission() {
	return array(
		'sparkswag_form_access' => array(
		'title' => t('Access content for the sparkswag module'),
		)
	);
$permission['access sparkswag content'] = array(
      'title' => t('Access content for the Spark Swag module'),
    );
$permission['administer sparkswag content'] = array(
      'title' => t('Administer content for the Spark Swag module'),
);

}


/**
 * Implements hook_block_info().
 */
function sparkswag_block_info() {
  $blocks['myblock1'] = array(
    'info' => t('Spark block'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  
$blocks['myblock2'] = array(
    'info' => t('Spark block 2'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  
	
  
  return $blocks;
}

function sparkswag_block_view($delta = '') {
  $block = array();

	switch ($delta) {
	case 'myblock1':
		$blocks['subject'] = t('This is a subject for block.');
		$form = drupal_get_form('sparkswag_myform1_form');	//call form
	        $block['content'] = drupal_render($form);	//get html from $form put in block content.
	break;
  return $block;
  }
}


function sparkswag_myform1_form($form, &$form_state){

$form['name'] = array(
	'#type' => 'textfield',
	'#name' => 'name',
	'#maxlength'=> 255,
	'#size'=> 30,
   	//'#value' => t('Name'),
	'#title' => t('Name'),
	'#title_display' => 'before'
	
  );

$form['description'] = array(
    '#type' => 'textarea',
	'#name' => 'description',
	'#maxlength'=> 1000,
	'#size'=> 30,
	'#title' =>  t('Description'),
	'#title_display' => 'before'
	
  );

$form['positions'] = array(
	'#type' => 'textfield',
	'#name' => 'positions',
	'#maxlength'=> 5,
	'#size'=> 10,
	'#title' => t('Positions available'),
	'#title_display' => 'before'
  );
  

$form['startdate'] = array(
	'#type' => 'date',
	'#title' => t('Start Date'),
	'#title_display' => 'before',
	'#required'=> TRUE,
    
  );
  
$form['enddate'] = array(
	'#type' => 'date',
	'#name' => 'enddate',
	'#title' => t('End Date'),
	'#title_display' => 'before'

  );
  
$form['deadline'] = array(
	'#type' => 'date',
	'#name' => 'deadline',
	'#title' => t('Application Deadline'),
	'#title_display' => 'before'
  );
  
$form['locationCity'] = array(
	'#type' => 'textfield',
	'#name' => 'locationCity',
	'#maxlength'=> 100,
	'#size'=> 10,
	'#title' => t('City'),
	'#title_display' => 'before'
  );
  
$form['locationState'] = array(
	'#type' => 'textfield',
	'#name' => 'locationState',
	'#maxlength'=> 100,
	'#size'=> 10,
	'#title' => t('State'),
	'#title_display' => 'before'
  );
  
  
$form['institution'] = array(
	'#type' => 'textfield',
	'#name' => 'institution',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title' =>t('Institution'),
	'#title_display' => 'before'
  );
  
$form['institutiontype'] = array(
	'#type' => 'textfield',
	'#name' => 'institutiontype',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title' =>t('Institution Type'),
	'#title_display' => 'before'
  );
  
$form['discipline'] = array(
	'#type' => 'textfield',
	'#name' => 'discipline',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title' => t('Discipline'),
	'#title_display' => 'before'
  );

$form['logo'] = array(
    '#type' => 'file',
    '#title' => t('Logo'),
    '#description' => t('Upload a file, allowed extensions: jpg, jpeg, png, gif'),
  );
  
$form['homepage'] = array(
	'#type' => 'textfield',
	'#name' => 'homepage',
	'#maxlength'=> 100,
	'#size'=> 10,
	'#title'=> t('Opportunity Homepage'),
	'#title_display' => 'before'
  );
  
  
$form['gpareq'] = array(
	'#type' => 'textfield',
	'#name' => 'gpareq',
	'#maxlength'=> 5,
	'#size'=> 10,
	'#title'=> t('GPA Requirement'),
	'#title_display' => 'before'
  );
  
$form['gradereq'] = array(
       '#type' => 'select',
       '#title' => t('Grade Level Requirement'),
       '#options' => array(
		 0 => t('Undefined'),
         1 => t('Freshman'),
         2 => t('Sophomore'),
		 3 => t('Junior'),
		 4 => t('Senior'),
       ),
       '#default_value' => t('Undefined'),
       '#description' => t('The grade level required to participate'),
   );
   
$form['paid'] = array(
	'#type' => 'checkbox',
	'#name' => 'paid',
	'#title'=> t('Paid'),
	'#title_display' => 'before'
  );
  
/**$form['contactinfo'] = array(
	'#type' => 'textarea',
	'#name' => 'contactinfo',
	'#maxlength'=> 100,
	'#size'=> 30,
	'#title'=> t('Contact Information'),
	'#title_display' => 'before'
  );*/


$form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Create!'),
  );
  
  return $form;
}


function sparkswag_myform1_form_submit($form, &$form_state) {
	drupal_set_message(t('The form is saving to DB!'));
	$insert = db_insert('opportunity');
	$form_name = $form_state['values']['name'];
	$form_description = $form_state['values']['description'];
	$form_positions = $form_state['values']['positions'];
	$date_arr = $form_state['values']['startdate'];
	if ($date_arr['year'] && $date_arr['month'] && $date_arr['day']) {
		$startdate = new DateTime();
		$startdate->setDate($date_arr['year'], $date_arr['month'], $date_arr['day']);
		$form_startdate = $startdate->format('Y-m-d-H-i-s');
	} 
	else {
		$startdate = NULL;
	}
	$date_arr2 = $form_state['values']['enddate'];
	if ($date_arr2['year'] && $date_arr2['month'] && $date_arr2['day']) {
		$enddate = new DateTime();
		$enddate->setDate($date_arr2['year'], $date_arr2['month'], $date_arr2['day']);
		$form_enddate = $enddate->format('Y-m-d-H-i-s');
	} 
	else {
		$form_enddate = NULL;
	}
	$date_arr3 = $form_state['values']['deadline'];
	if ($date_arr3['year'] && $date_arr3['month'] && $date_arr3['day']) {
		$deadline = new DateTime();
		$deadline->setDate($date_arr3['year'], $date_arr3['month'], $date_arr3['day']);
		$form_deadline = $deadline->format('Y-m-d-H-i-s');
	} 
	else {
		$form_deadline = NULL;
	}	
	$form_locationCity = $form_state['values']['locationCity'];
	$form_locationState = $form_state['values']['locationState'];
	$form_institution = $form_state['values']['institution'];
	$form_institutiontype = $form_state['values']['institutiontype'];
	$form_discipline = $form_state['values']['discipline'];
	$form_logo = $form_state['values']['logo'];
	$form_homepage = $form_state['values']['homepage'];
	$form_gpareq = $form_state['values']['gpareq'];
	$form_gradereq = $form_state['values']['gradereq'];
	$form_paid = $form_state['values']['paid'];

global $user;

	
	//insert object goes in insert object comes out
	//you can't explain that.
	$insert-> fields(array(
		'name' => $form_name,
		'opportunityDescription' => $form_description,
		'positionsAvailable' => $form_positions,
		'startDate' => $form_startdate,
		'endDate' => $form_enddate,
		'appDeadline' => $form_deadline,
		'locationCity' => $form_locationCity,
		'locationState' => $form_locationState,
		'institution' => $form_institution,
		'institutionType' => $form_institutiontype,
		'discipline' => $form_discipline,
		'logo' => $form_logo,
		'opportunityPage' => $form_homepage,
		'gpaReq' => $form_gpareq,
		'gradeReq' => $form_gradereq,
		'paid' => $form_paid,
		'uid' => $user->uid,
		)
	)
	->execute();
}


function sparkswag_private_node_this(){
	$html = '<h1>BEST CAPSTONE</h1><br /><p>Author: Justin Giddens<br />Details: Looking for new teammates for my capstone. thx<br /><br /><a href="http://database.sparkopenresearch.com/?q=opportunity/mynode">Back</a></p>';
	return array('#markup' => $html);
}




function  sparkswag_private_node_listing(){

	$html = '<div>'.t('This will provide information about current opportunities! ').'</div>'.'<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:20px 5px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:bold;padding:10px 5px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;}
</style>
<table class="tg">
  <tr>
    <th class="tg-031e">Results</th>
    <th class="tg-031e">Researcher</th>
    <th class="tg-031e">Project Title</th>
    <th class="tg-031e">Project Description</th>
    <th class="tg-031e">Start Date</th>
    <th class="tg-031e">End Date</th>
  </tr>
  <tr>
    <td class="tg-031e">1</td>
    <td class="tg-031e">Justin</td>
    <td class="tg-031e"><a href="http://database.sparkopenresearch.com/?q=opportunity/details">Best Capstone</a></td>
    <td class="tg-031e">Looking for new teammates for my capstone. thx</td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
  <tr>
    <td class="tg-031e">2</td>
    <td class="tg-031e">Nate</td>
    <td class="tg-031e">Study for books</td>
    <td class="tg-031e">research on different book genres</td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
  <tr>
    <td class="tg-031e">3</td>
    <td class="tg-031e">Snoop</td>
    <td class="tg-031e">Best things?</td>
    <td class="tg-031e">Survey for best things</td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
  <tr>
    <td class="tg-031e">4</td>
    <td class="tg-031e">Usher</td>
    <td class="tg-031e">Study for things</td>
    <td class="tg-031e">this or that</td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
  <tr>
    <td class="tg-031e">5</td>
    <td class="tg-031e">Kanye</td>
    <td class="tg-031e">EGO</td>
    <td class="tg-031e"></td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
  <tr>
    <td class="tg-031e">6</td>
    <td class="tg-031e">Kim</td>
    <td class="tg-031e">Americas next "famous" person</td>
    <td class="tg-031e">Need females to study and hang out with</td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
  <tr>
    <td class="tg-031e">7</td>
    <td class="tg-031e">Barack</td>
    <td class="tg-031e">Who should be next president</td>
    <td class="tg-031e">This project will research new candidates</td>
    <td class="tg-031e">2/24/15</td>
    <td class="tg-031e">2/30/16</td>
  </tr>
</table>';
	
	return array('#markup' => $html);
}

function sparkswag_admin() {
  $form = array();

  $form['sparkswag_admin_val1'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of opportunities'),
    '#default_value' => variable_get('sparkswag_setting1', 5),
    '#size' => 20,
    '#maxlength' => 20,
    '#description' => t("The Maximum number of opportunities"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function sparkswag_admin_validate($form, &$form_state) {
	//set error cheching here on posted values
	$adminval1 = $form_state['values']['sparkswag_admin_val1'];
	if (!is_numeric($adminval1)) {
	form_set_error('sparkswag_admin_val1', t('Enter a whole number'));
  }
}
